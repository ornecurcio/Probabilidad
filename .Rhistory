tau[i] <- tiempo
#cat("El tiempo es",tiempo,"\n")
#cat("El tau es",tau[i],"\n")
#print('')
}
mean_tau <- mean(tau)
median_tau <- median(tau)
sd_tau <- sd(tau)
quantiles_tau <- quantile(tau)
hist(tau[tau<15000], main = "Histograma de Tau", xlab = "Tiempo (segundos)", ylab = "Frecuencia", col = "lightblue", border = "black", breaks = 150)
cat("Media de Tau:", mean_tau, "\n")
cat("Mediana de Tau:", median_tau, "\n")
cat("Desviación estándar de Tau:", sd_tau, "\n")
cat("Cuartiles de Tau:", quantiles_tau, "\n")
n_simulaciones <- 1000
radio_mesa <- 1500 # cm
posicion_inicial <- c(0, 0) # Centro de la mesa
velocidad = 2
contador_while = 0
#declaro la funcion
fuera_de_mesa <- function(posicion, radio) {
return(sqrt(sum(posicion^2)) > radio)
}
# Realizar las simulaciones
tau <- numeric(n_simulaciones)
iteraciones_while <- numeric(n_simulaciones)
for (i in 1:n_simulaciones) {
posicion <- posicion_inicial
tiempo <- 0
contador_while = 0
#evaluando si estoy afuera o adentro de la mesa
while (!fuera_de_mesa(posicion, radio_mesa)) {
angulo <- runif(1, 0, 360)
#cat("El angulo es",angulo, "\n")
#velocidad <- abs(rnorm(1, mu_velocidad, sigma_velocidad))
distancia <- runif(1, 10, 30) # cm
tiempo_segmento <- distancia / velocidad
posicion <- posicion + c(distancia * cos(angulo), distancia * sin(angulo))
tiempo <- tiempo + tiempo_segmento
#cat("El tiempo del segmento es", tiempo_segmento,"\n")
#print('')
contador_while = 1 + contador_while
}
tau[i] <- tiempo
cat("El tiempo es",tiempo,"\n")
#cat("El tau es",tau[i],"\n")
#print('')
}
n_simulaciones <- 1000
radio_mesa <- 100 # cm
posicion_inicial <- c(0, 0) # Centro de la mesa
velocidad = 2
contador_while = 0
#declaro la funcion
fuera_de_mesa <- function(posicion, radio) {
return(sqrt(sum(posicion^2)) > radio)
}
# Realizar las simulaciones
tau <- numeric(n_simulaciones)
iteraciones_while <- numeric(n_simulaciones)
for (i in 1:n_simulaciones) {
posicion <- posicion_inicial
tiempo <- 0
contador_while = 0
#evaluando si estoy afuera o adentro de la mesa
while (!fuera_de_mesa(posicion, radio_mesa)) {
angulo <- runif(1, 0, 360)
#cat("El angulo es",angulo, "\n")
#velocidad <- abs(rnorm(1, mu_velocidad, sigma_velocidad))
distancia <- runif(1, 10, 30) # cm
tiempo_segmento <- distancia / velocidad
posicion <- posicion + c(distancia * cos(angulo), distancia * sin(angulo))
tiempo <- tiempo + tiempo_segmento
#cat("El tiempo del segmento es", tiempo_segmento,"\n")
#print('')
contador_while = 1 + contador_while
}
tau[i] <- tiempo
cat("El tiempo es",tiempo,"\n")
#cat("El tau es",tau[i],"\n")
#print('')
}
mean_tau <- mean(tau)
median_tau <- median(tau)
sd_tau <- sd(tau)
quantiles_tau <- quantile(tau)
#hist(tau[tau<15000], main = "Histograma de Tau", xlab = "Tiempo (segundos)", ylab = "Frecuencia", col = "lightblue", border = "black", breaks = 150)
cat("Media de Tau:", mean_tau, "\n")
cat("Mediana de Tau:", median_tau, "\n")
cat("Desviación estándar de Tau:", sd_tau, "\n")
cat("Cuartiles de Tau:", quantiles_tau, "\n")
n_simulaciones <- 1000
radio_mesa <- 100 # cm
posicion_inicial <- c(0, 0) # Centro de la mesa
velocidad = 10 #cm / seg
contador_while = 0
#declaro la funcion
fuera_de_mesa <- function(posicion, radio) {
return(sqrt(sum(posicion^2)) > radio)
}
# Realizar las simulaciones
tau <- numeric(n_simulaciones)
iteraciones_while <- numeric(n_simulaciones)
for (i in 1:n_simulaciones) {
posicion <- posicion_inicial
tiempo <- 0
contador_while = 0
#evaluando si estoy afuera o adentro de la mesa
while (!fuera_de_mesa(posicion, radio_mesa)) {
angulo <- runif(1, 0, 360)
#cat("El angulo es",angulo, "\n")
#velocidad <- abs(rnorm(1, mu_velocidad, sigma_velocidad))
distancia <- runif(1, 10, 30) # cm
tiempo_segmento <- distancia / velocidad
posicion <- posicion + c(distancia * cos(angulo), distancia * sin(angulo))
tiempo <- tiempo + tiempo_segmento
#cat("El tiempo del segmento es", tiempo_segmento,"\n")
#print('')
contador_while = 1 + contador_while
}
tau[i] <- tiempo
#cat("El tiempo es",tiempo,"\n")
#cat("El tau es",tau[i],"\n")
#print('')
}
mean_tau <- mean(tau)
median_tau <- median(tau)
sd_tau <- sd(tau)
quantiles_tau <- quantile(tau)
#hist(tau[tau<15000], main = "Histograma de Tau", xlab = "Tiempo (segundos)", ylab = "Frecuencia", col = "lightblue", border = "black", breaks = 150)
cat("Media de Tau:", mean_tau, "\n")
cat("Mediana de Tau:", median_tau, "\n")
cat("Desviación estándar de Tau:", sd_tau, "\n")
cat("Cuartiles de Tau:", quantiles_tau, "\n")
n_simulaciones <- 1000
radio_mesa <- 100 # cm
posicion_inicial <- c(0, 0) # Centro de la mesa
velocidad = 10 #cm / seg
contador_while = 0
#declaro la funcion
fuera_de_mesa <- function(posicion, radio) {
return(sqrt(sum(posicion^2)) > radio)
}
# Realizar las simulaciones
tau <- numeric(n_simulaciones)
iteraciones_while <- numeric(n_simulaciones)
for (i in 1:n_simulaciones) {
posicion <- posicion_inicial
tiempo <- 0
contador_while = 0
#evaluando si estoy afuera o adentro de la mesa
while (!fuera_de_mesa(posicion, radio_mesa)) {
angulo <- runif(1, 0, 360)
#cat("El angulo es",angulo, "\n")
#velocidad <- abs(rnorm(1, mu_velocidad, sigma_velocidad))
distancia <- runif(1, 10, 30) # cm
tiempo_segmento <- distancia / velocidad
posicion <- posicion + c(distancia * cos(angulo), distancia * sin(angulo))
tiempo <- tiempo + tiempo_segmento
#cat("El tiempo del segmento es", tiempo_segmento,"\n")
#print('')
contador_while = 1 + contador_while
}
tau[i] <- tiempo
#cat("El tiempo es",tiempo,"\n")
#cat("El tau es",tau[i],"\n")
#print('')
}
mean_tau <- mean(tau)
median_tau <- median(tau)
sd_tau <- sd(tau)
quantiles_tau <- quantile(tau)
hist(tau[tau<1000], main = "Histograma de Tau", xlab = "Tiempo (segundos)", ylab = "Frecuencia", col = "lightblue", border = "black", breaks = 150)
cat("Media de Tau:", mean_tau, "\n")
cat("Mediana de Tau:", median_tau, "\n")
cat("Desviación estándar de Tau:", sd_tau, "\n")
cat("Cuartiles de Tau:", quantiles_tau, "\n")
n_simulaciones <- 1000
radio_mesa <- 100 # cm
posicion_inicial <- c(0, 0) # Centro de la mesa
velocidad = 10 #cm / seg
contador_while = 0
#declaro la funcion
fuera_de_mesa <- function(posicion, radio) {
return(sqrt(sum(posicion^2)) > radio)
}
# Realizar las simulaciones
tau <- numeric(n_simulaciones)
iteraciones_while <- numeric(n_simulaciones)
for (i in 1:n_simulaciones) {
posicion <- posicion_inicial
tiempo <- 0
contador_while = 0
#evaluando si estoy afuera o adentro de la mesa
while (!fuera_de_mesa(posicion, radio_mesa)) {
angulo <- runif(1, 0, 360)
#cat("El angulo es",angulo, "\n")
#velocidad <- abs(rnorm(1, mu_velocidad, sigma_velocidad))
distancia <- runif(1, 10, 30) # cm
tiempo_segmento <- distancia / velocidad
posicion <- posicion + c(distancia * cos(angulo), distancia * sin(angulo))
tiempo <- tiempo + tiempo_segmento
#cat("El tiempo del segmento es", tiempo_segmento,"\n")
#print('')
contador_while = 1 + contador_while
}
tau[i] <- tiempo
#cat("El tiempo es",tiempo,"\n")
#cat("El tau es",tau[i],"\n")
#print('')
}
mean_tau <- mean(tau)
median_tau <- median(tau)
sd_tau <- sd(tau)
quantiles_tau <- quantile(tau)
hist(tau[tau<200], main = "Histograma de Tau", xlab = "Tiempo (segundos)", ylab = "Frecuencia", col = "lightblue", border = "black", breaks = 150)
cat("Media de Tau:", mean_tau, "\n")
cat("Mediana de Tau:", median_tau, "\n")
cat("Desviación estándar de Tau:", sd_tau, "\n")
cat("Cuartiles de Tau:", quantiles_tau, "\n")
n_simulaciones <- 1000
radio_mesa <- 100 # cm
posicion_inicial <- c(0, 0) # Centro de la mesa
velocidad = 10 #cm / seg
contador_while = 0
#declaro la funcion
fuera_de_mesa <- function(posicion, radio) {
return(sqrt(sum(posicion^2)) > radio)
}
# Realizar las simulaciones
tau <- numeric(n_simulaciones)
iteraciones_while <- numeric(n_simulaciones)
for (i in 1:n_simulaciones) {
posicion <- posicion_inicial
tiempo <- 0
contador_while = 0
#evaluando si estoy afuera o adentro de la mesa
while (!fuera_de_mesa(posicion, radio_mesa)) {
angulo <- runif(1, 0, 360)
#cat("El angulo es",angulo, "\n")
#velocidad <- abs(rnorm(1, mu_velocidad, sigma_velocidad))
distancia <- runif(1, 10, 30) # cm
tiempo_segmento <- distancia / velocidad
posicion <- posicion + c(distancia * cos(angulo), distancia * sin(angulo))
tiempo <- tiempo + tiempo_segmento
#cat("El tiempo del segmento es", tiempo_segmento,"\n")
#print('')
contador_while = 1 + contador_while
}
tau[i] <- tiempo
#cat("El tiempo es",tiempo,"\n")
#cat("El tau es",tau[i],"\n")
#print('')
}
mean_tau <- mean(tau)
median_tau <- median(tau)
sd_tau <- sd(tau)
quantiles_tau <- quantile(tau)
hist(tau[tau<150], main = "Histograma de Tau", xlab = "Tiempo (segundos)", ylab = "Frecuencia", col = "lightblue", border = "black", breaks = 150)
cat("Media de Tau:", mean_tau, "\n")
cat("Mediana de Tau:", median_tau, "\n")
cat("Desviación estándar de Tau:", sd_tau, "\n")
cat("Cuartiles de Tau:", quantiles_tau, "\n")
n_simulaciones <- 1000
radio_mesa <- 100 # cm
posicion_inicial <- c(0, 0) # Centro de la mesa
velocidad = 10 #cm / seg
contador_while = 0
#declaro la funcion
fuera_de_mesa <- function(posicion, radio) {
return(sqrt(sum(posicion^2)) > radio)
}
# Realizar las simulaciones
tau <- numeric(n_simulaciones)
iteraciones_while <- numeric(n_simulaciones)
for (i in 1:n_simulaciones) {
posicion <- posicion_inicial
tiempo <- 0
contador_while = 0
#evaluando si estoy afuera o adentro de la mesa
while (!fuera_de_mesa(posicion, radio_mesa)) {
angulo <- runif(1, 0, 360)
#cat("El angulo es",angulo, "\n")
#velocidad <- abs(rnorm(1, mu_velocidad, sigma_velocidad))
distancia <- runif(1, 10, 30) # cm
tiempo_segmento <- distancia / velocidad
posicion <- posicion + c(distancia * cos(angulo), distancia * sin(angulo))
tiempo <- tiempo + tiempo_segmento
#cat("El tiempo del segmento es", tiempo_segmento,"\n")
#print('')
contador_while = 1 + contador_while
}
tau[i] <- tiempo
#cat("El tiempo es",tiempo,"\n")
#cat("El tau es",tau[i],"\n")
#print('')
}
log_verosimilitud_negativa <- function(rate, data) {
n <- length(data)
log_likelihood <- n * log(rate) - rate * sum(data)
return(-log_likelihood)
}
ajuste_exponencial <- optim(1 / mean(tau), log_verosimilitud_negativa, data = tau)
tasa_estimada <- ajuste_exponencial$par
cat("Estimación de la tasa:", tasa_estimada, "\n")
hist(tau[tau < 150], probability = TRUE, main = "Histograma de Tau y Curva Ajustada", xlab = "Tiempo (segundos)", ylab = "Densidad", col = "lightblue", border = "black", breaks = 150)
curve(dexp(x, rate = tasa_estimada), add = TRUE, col = "red", lwd = 2)
# mean_tau <- mean(tau)
# median_tau <- median(tau)
# sd_tau <- sd(tau)
# quantiles_tau <- quantile(tau)
#hist(tau[tau<150], main = "Histograma de Tau", xlab = "Tiempo (segundos)", ylab = "Frecuencia", col = "lightblue", border = "black", breaks = 150)
# cat("Media de Tau:", mean_tau, "\n")
#
# cat("Mediana de Tau:", median_tau, "\n")
#
# cat("Desviación estándar de Tau:", sd_tau, "\n")
#
# cat("Cuartiles de Tau:", quantiles_tau, "\n")
n_simulaciones <- 1000
radio_mesa <- 100 # cm
posicion_inicial <- c(0, 0) # Centro de la mesa
velocidad = 10 #cm / seg
contador_while = 0
#declaro la funcion
fuera_de_mesa <- function(posicion, radio) {
return(sqrt(sum(posicion^2)) > radio)
}
# Realizar las simulaciones
tau <- numeric(n_simulaciones)
iteraciones_while <- numeric(n_simulaciones)
for (i in 1:n_simulaciones) {
posicion <- posicion_inicial
tiempo <- 0
contador_while = 0
#evaluando si estoy afuera o adentro de la mesa
while (!fuera_de_mesa(posicion, radio_mesa)) {
angulo <- runif(1, 0, 360)
#cat("El angulo es",angulo, "\n")
#velocidad <- abs(rnorm(1, mu_velocidad, sigma_velocidad))
distancia <- runif(1, 10, 30) # cm
tiempo_segmento <- distancia / velocidad
posicion <- posicion + c(distancia * cos(angulo), distancia * sin(angulo))
tiempo <- tiempo + tiempo_segmento
#cat("El tiempo del segmento es", tiempo_segmento,"\n")
#print('')
contador_while = 1 + contador_while
}
tau[i] <- tiempo
#cat("El tiempo es",tiempo,"\n")
#cat("El tau es",tau[i],"\n")
#print('')
}
# mean_tau <- mean(tau)
# median_tau <- median(tau)
# sd_tau <- sd(tau)
# quantiles_tau <- quantile(tau)
hist(tau[tau<150], main = "Histograma de Tau", xlab = "Tiempo (segundos)", ylab = "Frecuencia", col = "lightblue", border = "black", breaks = 150)
# cat("Media de Tau:", mean_tau, "\n")
#
# cat("Mediana de Tau:", median_tau, "\n")
#
# cat("Desviación estándar de Tau:", sd_tau, "\n")
#
# cat("Cuartiles de Tau:", quantiles_tau, "\n")
n_simulaciones <- 1000
radio_mesa <- 100 # cm
posicion_inicial <- c(0, 0) # Centro de la mesa
velocidad = 10 #cm / seg
contador_while = 0
#declaro la funcion
fuera_de_mesa <- function(posicion, radio) {
return(sqrt(sum(posicion^2)) > radio)
}
# Realizar las simulaciones
tau <- numeric(n_simulaciones)
iteraciones_while <- numeric(n_simulaciones)
for (i in 1:n_simulaciones) {
posicion <- posicion_inicial
tiempo <- 0
contador_while = 0
#evaluando si estoy afuera o adentro de la mesa
while (!fuera_de_mesa(posicion, radio_mesa)) {
angulo <- runif(1, 0, 360)
#cat("El angulo es",angulo, "\n")
#velocidad <- abs(rnorm(1, mu_velocidad, sigma_velocidad))
distancia <- runif(1, 10, 30) # cm
tiempo_segmento <- distancia / velocidad
posicion <- posicion + c(distancia * cos(angulo), distancia * sin(angulo))
tiempo <- tiempo + tiempo_segmento
#cat("El tiempo del segmento es", tiempo_segmento,"\n")
#print('')
contador_while = 1 + contador_while
}
tau[i] <- tiempo
#cat("El tiempo es",tiempo,"\n")
#cat("El tau es",tau[i],"\n")
#print('')
}
# mean_tau <- mean(tau)
# median_tau <- median(tau)
# sd_tau <- sd(tau)
# quantiles_tau <- quantile(tau)
hist(tau[tau<150], main = "Histograma de Tau", xlab = "Tiempo (segundos)", ylab = "Frecuencia", col = "lightblue", border = "black", breaks = 150)
# cat("Media de Tau:", mean_tau, "\n")
#
# cat("Mediana de Tau:", median_tau, "\n")
#
# cat("Desviación estándar de Tau:", sd_tau, "\n")
#
# cat("Cuartiles de Tau:", quantiles_tau, "\n")
n_simulaciones <- 100000
radio_mesa <- 100 # cm
posicion_inicial <- c(0, 0) # Centro de la mesa
velocidad = 10 #cm / seg
contador_while = 0
#declaro la funcion
fuera_de_mesa <- function(posicion, radio) {
return(sqrt(sum(posicion^2)) > radio)
}
# Realizar las simulaciones
tau <- numeric(n_simulaciones)
iteraciones_while <- numeric(n_simulaciones)
for (i in 1:n_simulaciones) {
posicion <- posicion_inicial
tiempo <- 0
contador_while = 0
#evaluando si estoy afuera o adentro de la mesa
while (!fuera_de_mesa(posicion, radio_mesa)) {
angulo <- runif(1, 0, 360)
#cat("El angulo es",angulo, "\n")
#velocidad <- abs(rnorm(1, mu_velocidad, sigma_velocidad))
distancia <- runif(1, 10, 30) # cm
tiempo_segmento <- distancia / velocidad
posicion <- posicion + c(distancia * cos(angulo), distancia * sin(angulo))
tiempo <- tiempo + tiempo_segmento
#cat("El tiempo del segmento es", tiempo_segmento,"\n")
#print('')
contador_while = 1 + contador_while
}
tau[i] <- tiempo
#cat("El tiempo es",tiempo,"\n")
#cat("El tau es",tau[i],"\n")
#print('')
}
# mean_tau <- mean(tau)
# median_tau <- median(tau)
# sd_tau <- sd(tau)
# quantiles_tau <- quantile(tau)
hist(tau[tau<150], main = "Histograma de Tau", xlab = "Tiempo (segundos)", ylab = "Frecuencia", col = "lightblue", border = "black", breaks = 100)
# cat("Media de Tau:", mean_tau, "\n")
#
# cat("Mediana de Tau:", median_tau, "\n")
#
# cat("Desviación estándar de Tau:", sd_tau, "\n")
#
# cat("Cuartiles de Tau:", quantiles_tau, "\n")
datos = load("births2006smpl.rda")
load("births2006smpl.rda")
load("C:/Users/orne_/OneDrive/Documentos/--------Master Data Science--------/R/births2006smpl.rda")
load("C:/Users/orne_/OneDrive/Documentos/--------Master Data Science--------/R/births2006smpl.rda")
datos = "births2006mpl.rda"
class(datos)
load("C:/Users/orne_/OneDrive/Documentos/--------Master Data Science--------/R/births2006smpl.rda")
datos = "births2006mpl.rda"
length(datos)
datos = load("C:/Users/orne_/OneDrive/Documentos/--------Master Data Science--------/R/births2006smpl.rda")
#datos = "births2006mpl.rda"
length(datos)
datos = load("C:/Users/orne_/OneDrive/Documentos/--------Master Data Science--------/R/births2006smpl.rda")
#datos = "births2006mpl.rda"
length(datos)
datos[1]
datos = load("C:/Users/orne_/OneDrive/Documentos/--------Master Data Science--------/R/births2006smpl.rda")
#datos = "births2006mpl.rda"
length(datos)
datos[2]
datos = load("C:/Users/orne_/OneDrive/Documentos/--------Master Data Science--------/R/births2006smpl.rda")
#datos = "births2006mpl.rda"
datos = load("C:/Users/orne_/OneDrive/Documentos/--------Master Data Science--------/R/births2006smpl.rda")
#datos = "births2006mpl.rda"
datos
datos = load("C:/Users/orne_/OneDrive/Documentos/--------Master Data Science--------/R/births2006smpl.rda")
#datos = "births2006mpl.rda"
head(datos)
load("C:/Users/orne_/OneDrive/Documentos/--------Master Data Science--------/R/births2006smpl.rda")
#datos = "births2006mpl.rda"
datos = "births2006smpl.rda"
head(datos)
load("C:/Users/orne_/OneDrive/Documentos/--------Master Data Science--------/R/births2006smpl.rda")
#datos = "births2006mpl.rda"
datos = "births2006smpl.rda"
head(datos)
load("C:/Users/orne_/OneDrive/Documentos/--------Master Data Science--------/R/births2006smpl.rda")
#datos = "births2006mpl.rda"
datos = "births2006smpl.rda"
head(datos)
load("C:/Users/orne_/OneDrive/Documentos/--------Master Data Science--------/R/births2006smpl.rda")
datos = "births2006smpl.rda"
head(datos)
load("C:/Users/orne_/OneDrive/Documentos/--------Master Data Science--------/R/births2006smpl.rda")
datos = births2006smpl.rda
load("C:/Users/orne_/OneDrive/Documentos/--------Master Data Science--------/R/births2006smpl.rda")
datos = births2006.smpl
head(datos)
dim(datos)
head(datos)
names(datos)=c(“mes”,“dia”,“edad_madre”,“num_hijos”,
names(datos)=c("mes","dia","edad_madre","num_hijos",
"peso_ganado_madre","sexo","apgar","educ","visitas_medicas","gestacion",
"tipo_parto","parto_multiple","peso")
install.packages("tidyverse")
